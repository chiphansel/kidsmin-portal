-- =========================================================
-- KidsMin Portal — Initial Schema + Minimal Seed (MySQL 8)
-- Events table explicitly removed
-- =========================================================

-- If you want to keep existing events data, comment these three lines
SET FOREIGN_KEY_CHECKS = 0;
SET FOREIGN_KEY_CHECKS = 1;

-- 0) Database
CREATE DATABASE IF NOT EXISTS kidsmin_dev
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_0900_ai_ci;
USE kidsmin_dev;

-- 1) individuals
CREATE TABLE IF NOT EXISTS individual (
  id           BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  first_name   VARCHAR(80)  NOT NULL,
  last_name    VARCHAR(80)  NOT NULL,
  display_name VARCHAR(120) NOT NULL,
  grade        VARCHAR(32)  NOT NULL DEFAULT 'Adult',
  special      TINYINT(1)   NOT NULL DEFAULT 0,
  created_by   BIGINT UNSIGNED NULL,
  created_at   DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at   DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  KEY idx_individual_last_name (last_name),
  KEY idx_individual_display_name (display_name),
  CONSTRAINT fk_individual_created_by
    FOREIGN KEY (created_by) REFERENCES individual(id) ON DELETE SET NULL
) ENGINE=InnoDB;

-- 2) credentials (1:1 with individual; emails unique)
CREATE TABLE IF NOT EXISTS credentials (
  id             BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  individual_id  BIGINT UNSIGNED NOT NULL,
  email          VARCHAR(254)    NOT NULL,
  password_hash  VARCHAR(255)    DEFAULT NULL,
  is_active      TINYINT(1)      NOT NULL DEFAULT 0,
  created_at     DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at     DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE KEY uk_credentials_individual (individual_id),
  UNIQUE KEY uk_credentials_email (email),
  CONSTRAINT fk_credentials_individual
    FOREIGN KEY (individual_id) REFERENCES individual(id) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 3) entity (hierarchical; DENOMINATION → NATIONAL → REGIONAL → DISTRICT → CHURCH)
CREATE TABLE IF NOT EXISTS entity (
  id         BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  name       VARCHAR(160)    NOT NULL,
  level      ENUM('DENOMINATION','NATIONAL','REGIONAL','DISTRICT','CHURCH') NOT NULL,
  parent_id  BIGINT UNSIGNED DEFAULT NULL,
  created_at DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  KEY idx_entity_level (level),
  KEY idx_entity_parent (parent_id),
  UNIQUE KEY uk_entity_hierarchy (name, level, parent_id),
  CONSTRAINT fk_entity_parent
    FOREIGN KEY (parent_id) REFERENCES entity(id) ON DELETE SET NULL
) ENGINE=InnoDB;

-- 4) role_assignment (who has which role on which entity)
CREATE TABLE IF NOT EXISTS role_assignment (
  id             BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  individual_id  BIGINT UNSIGNED NOT NULL,
  target_type    ENUM('ENTITY')  NOT NULL DEFAULT 'ENTITY',
  target_id      BIGINT UNSIGNED NOT NULL,
  role           ENUM('CMC','CDR','POG','COACH','ADMIN') NOT NULL,
  active         DATE            NOT NULL DEFAULT '9999-12-31',
  created_at     DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at     DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  KEY idx_role_assignment_individual (individual_id),
  KEY idx_role_assignment_target (target_type, target_id),
  KEY idx_role_assignment_active (active),
  UNIQUE KEY uk_role_assignment_unique (individual_id, target_type, target_id, role, active),
  CONSTRAINT fk_role_assignment_individual
    FOREIGN KEY (individual_id) REFERENCES individual(id) ON DELETE CASCADE,
  CONSTRAINT fk_role_assignment_entity
    FOREIGN KEY (target_id)     REFERENCES entity(id)     ON DELETE CASCADE
) ENGINE=InnoDB;

-- 5) Minimal seed: Denomination + National Office
INSERT INTO entity (name, level, parent_id)
VALUES ('Default Denomination', 'DENOMINATION', NULL)
ON DUPLICATE KEY UPDATE name = VALUES(name);

INSERT INTO entity (name, level, parent_id)
SELECT 'National Office', 'NATIONAL', d.id
FROM entity d
WHERE d.name = 'Default Denomination'
  AND d.level = 'DENOMINATION'
  AND NOT EXISTS (
    SELECT 1 FROM entity e
     WHERE e.name = 'National Office'
       AND e.level = 'NATIONAL'
       AND e.parent_id = d.id
  );
